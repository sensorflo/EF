#!/usr/bin/env efc
//
// The EF programming language tutorial part 3
// ===========================================
//
// Expressions
// ---------------------------------------------------
// - The body of a function or of an flow control element is an expression.  An
//   expression in EF is comparable to what C or Java call a block.
// - An expression is a semicolon separated list of so called stand alone
//   expressions.  Actually the semicolon is optional.
// - A stand alone expression is comparable to what C, Java etc. call a
//   statement.
// - The value of an expression is the value of its last stand alone
//   expression.

// Data object definitions
// -----------------------
// The example below shows how values and variables are defined. A value is an
// immutable (aka const) variable. 'Data object' is the generic term for
// variable and value. The initializer can be after the identifier or after the
// type.
fun square_minus_four:(x:int) int =
   val square: int = x * x$
   var tmp = square - 1 :int$

   tmp = tmp - 1
   tmp = tmp - 1
   tmp - 1
$

square_minus_four(3)
